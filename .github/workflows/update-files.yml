name: Update Files
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
jobs:
  update-files:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository content
      uses: actions/checkout@v4

    - name: Set up jq and GNU Parallel
      run: |
        sudo apt-get update
        sudo apt-get install -y jq parallel
    - name: Configure git settings
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
    - name: Clean and pull latest changes
      run: |
        git reset --hard
        git fetch origin
        git rebase origin/main
    - name: Generate HTML page
    - name: Generate HTML pages
      run: |
        # Generate index.html
        cat > index.html <<EOF
        <!DOCTYPE html>
        <html lang="en">
                        <tr><th>Package Name</th><th>Description</th></tr>
                    </thead>
                    <tbody>
                        $(jq -r 'to_entries | sort_by(.key)[] | "<tr><td><a href=\"/\(.key)\">\(.key)</a></td><td>\(.value.description)</td></tr>"' packages.json)
                        $(jq -r 'to_entries | sort_by(.key)[] | "<tr><td><a href=\"/\(.key).html\">\(.key)</a></td><td>\(.value.description)</td></tr>"' packages.json)
                    </tbody>
                </table>
                <p>For more details, visit our <a href="https://github.com/woolflare/EasyInstall">GitHub repository</a>.</p>
            </div>
        </body>
        </html>
        EOF
        # Generate individual package HTML pages
        packages=$(jq -r '. | to_entries[]' packages.json)
        echo "$packages" | while IFS=$'\n' read -r package; do
            key=$(echo "$package" | jq -r '.key')
            description=$(echo "$package" | jq -r '.value.description')
            website=$(echo "$package" | jq -r '.value.website')
            installer_url=$(echo "$package" | jq -r '.value.installer_url')
            cat <<EOF > ${key}.html
            <!DOCTYPE html>
            <html lang="en">
            <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <meta name="description" content="Automatic installation script collection.">
                <title>EasyInstall - ${key}</title>
                <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.3/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
                <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.3/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
            </head>
            <body>
                <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
                    <div class="container">
                        <a class="navbar-brand" href="/">EasyInstall</a>
                    </div>
                </nav>
            
                <div class="container">
                    <h1 id="usage">${key}</h1>
                    <p>${description}</p>
                    <p><a href="${website}">Website</a> | <a href="${installer_url}">Installer Source</a></p>
                    <h1>Install ${key}</h1>
                    <p>Paste this into Terminal.app or a shell prompt, and press enter.</p>
                    <p><code>curl -s https://ezi.sh/${key} | sh</code><p>
                    <p>For more details, visit our <a href="https://github.com/woolflare/EasyInstall">GitHub repository</a>.</p>
                </div>
            </body>
            </html>
            EOF
        done
    - name: Commit and push HTML changes
      run: |
        if [ -n "$(git status --porcelain | grep index.html)" ]; then
          git add index.html
          git commit -m 'Regenerate HTML index page'
        if [ -n "$(git status --porcelain | grep .html)" ]; then
          git add *.html
          git commit -m 'Regenerate HTML pages'
          git push
        else
          echo "No changes to commit for index.html"
          echo "No changes to commit for HTML pages"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
